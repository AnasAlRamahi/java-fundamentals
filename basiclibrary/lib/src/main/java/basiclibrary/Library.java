/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;

public class Library {
    public static void main(String[] args) {
        int[] arr = roll(4);
        System.out.println("---------------------------");
        System.out.println("Is there any duplicates? " + containsDuplicates(arr));
        System.out.println("---------------------------");
        System.out.println("Average for the array is " + calcAverage(arr));
        System.out.println("---------------------------");

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println("Array with the lowest average has the following values:");
        System.out.println(Arrays.toString(lowestAverage(weeklyMonthTemperatures)));
        System.out.println("---------------------------");
        analyzingWeatherData(weeklyMonthTemperatures);
        System.out.println("---------------------------");

        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");
        System.out.println("---------------------------");


    }


    public static int[] roll(int n) {
        int[] rollArr = new int[n];

        for (int i = 0; i < n; i++) {
            int randomNumber = (int) (Math.random() * 6 + 1);
            rollArr[i] = randomNumber;
            System.out.println("Roll #" + (i + 1) + " is " + rollArr[i]);
        }
        return rollArr;


    }

    public static boolean containsDuplicates(int[] arr) {
        for (int value : arr) {
            int duplicates = 0;
            for (int i = 0; i < arr.length; i++) {
                if (arr[i] == value)
                    duplicates++;
                if (duplicates > 1)
                    return true;
            }

        }
        return false;
    }

    public static double calcAverage(int[] arr) {
        double sum = 0;
        for (int value : arr) {
            sum += value;
        }
        return sum / arr.length;
    }

    public static int[] lowestAverage(int[][] arr) {
        double sum = 0;
        double avg = 0;
        double lowestAvg = 0;
        int index = 0;

        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                sum += arr[i][j];
                avg = sum / arr[i].length;
                if (i == 0) {
                    lowestAvg = avg;
                }
            }
            if (avg < lowestAvg) {
                lowestAvg = avg;
                index = i;
            }
            sum = 0;
            avg = 0;
        }
        return arr[index];
    }

    public static String analyzingWeatherData(int[][] arr) {
        int min = 0;
        int max = 0;
        HashSet<Integer> weatherSet = new HashSet<Integer>();
        String missingTemp = "";

        for (int i = 0; i < arr.length; i++) {
            if (i == 0) {
                min = arr[i][0];
                max = arr[i][0];
            }
            for (int j = 0; j < arr[i].length; j++) {
                if (arr[i][j] < min) {
                    min = arr[i][j];
                }
                if (arr[i][j] > max) {
                    max = arr[i][j];
                }
                weatherSet.add(arr[i][j]);
            }

        }

        for (int i = min; i <= max; i++) {
            if (!weatherSet.contains(i)) {
                missingTemp += "Never saw the temperature: " + i + "\n";
            }
        }

        System.out.println("High: " + max);
        System.out.println("Low: " + min);
        System.out.println(weatherSet.toString());
        System.out.println(missingTemp);
        return missingTemp;
    }

    public static String tally(List<String> list) {
        HashSet<String> hashNames = new HashSet<String>(list);
        int counter = 0;
        int mostVotes = 0;
        String mostVotesName = "";
        for (String name : hashNames) {
            for (int i = 0; i < list.size(); i++)
                if (list.get(i) == name)
                    counter++;
            if (counter > mostVotes) {
                mostVotes = counter;
                mostVotesName = name;
            }
            counter = 0;
        }
        return mostVotesName;
    }

}
