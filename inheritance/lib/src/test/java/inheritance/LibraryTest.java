/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package inheritance;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.List;

class LibraryTest {

    @Test
    void constructorRestaurant() {
        Restaurant res = new Restaurant("PizzaHut", 2, 1);
        assertEquals("PizzaHut", res.getName());
        assertEquals(2, res.getStars());
        assertEquals(1, res.getPriceCategory());
    }

    @Test
    void toStringRestaurant() {
        Restaurant res = new Restaurant("mac", 3, 3);
        String expectedString = "This is a Restaurant instance, with name: mac, stars: 3.0, price category: 3\n";
        assertEquals(expectedString, res.toString());
    }

    @Test
    void constructorReview() {
        Review review = new Review("Delicious meals", "Anas", 4);
        assertEquals("Delicious meals", review.getBody());
        assertEquals("Anas", review.getAuthor());
        assertEquals(4, review.getStars());
    }

    @Test
    void toStringReview() {
        Review review = new Review("The meals taste great", "Saify", 5);
        String expectedString = "Review instance, with body: The meals taste great, author: Saify, stars: 5";
        assertEquals(expectedString, review.toString());
    }

    @Test
    void addReviewInRestaurant() {
        Restaurant res = new Restaurant("mac", 3, 3);
        Review rev1 = new Review("Nice restaurant", "Majd", 5);
        Review rev2 = new Review("Not a bad restaurant", "Saify", 4);
        res.addReview(rev1);
        res.addReview(rev2);
        String expectedString = "This is a Restaurant instance, with name: mac, stars: 4.0, price category: 3\n" +
                "Nice restaurant\n" +
                "Not a bad restaurant\n";
        assertEquals(expectedString, res.toString());
    }

    @Test
    void noDuplicatesWhenAddingReviews() {
        Restaurant res = new Restaurant("BurgerKing", 3, 3);
        Review rev1 = new Review("Great Experience", "Yazan", 5);
        Review rev2 = new Review("TRASHH!!", "Mohammad", 1);
        res.addReview(rev1);
        res.addReview(rev2); //first time adding the second review
        res.addReview(rev2); //inserting the second review again
        res.addReview(rev2); //adding the second review for the third time
        String expectedString = "This is a Restaurant instance, with name: BurgerKing, stars: 3.0, price category: 3\n" +
                "Great Experience\n" +
                "TRASHH!!\n";
        assertEquals(expectedString, res.toString());
    }

    //Tests for lab07:

    @Test
    void shopClassConstructor() {
        Shop shop = new Shop("Ramahi", "The best place to buy the best meal you will ever have in your life!", 3);
        assertEquals("Ramahi", shop.getName());
        assertEquals("The best place to buy the best meal you will ever have in your life!", shop.getDescription());
        assertEquals(3 , shop.getNumDollarSigns());
    }

    @Test
    void shopClassToString() {
        Shop shop = new Shop("Ramahi", "The best place to buy the best meal you will ever have in your life!", 3);
        String expected = "This is a Shop instance, with name: Ramahi, description: The best place to buy the best meal you will ever have in your life!, number of dollar signs: 3";
        assertEquals(expected, shop.toString());
    }

    @Test
    void shopReviewConstructor(){
        Review shopreview = new Review("Amazing shop!", "Anas", 4);
        assertEquals("Amazing shop!", shopreview.getBody());
        assertEquals("Anas", shopreview.getAuthor());
        assertEquals(4, shopreview.getStars());
    }

    @Test
    void shopReviewToString(){
        Review shopreview = new Review("Nice", "Saify", 3);
        String expected = "Review instance, with body: Nice, author: Saify, stars: 3";
        assertEquals(expected, shopreview.toString());
    }

    @Test
    void shopAddReview(){
        Shop shop = new Shop("Ramahi", "The best place to buy the best meal you will ever have in your life!", 3);
        Review r1 = new Review("Good", "Anas", 3);
        Review r2 = new Review("Great", "Saify", 4);
        Review r3 = new Review("Awsome", "Majd", 5);

        shop.addReview(r1);
        shop.addReview(r2);
        shop.addReview(r3);

        String expected = "This is a Shop instance, with name: Ramahi, description: The best place to buy the best meal you will ever have in your life!, number of dollar signs: 3" +
                "\nReview instance, with body: Good, author: Anas, stars: 3" +
                "\nReview instance, with body: Great, author: Saify, stars: 4" +
                "\nReview instance, with body: Awsome, author: Majd, stars: 5";

        assertEquals(expected, shop.toString());
    }

    @Test
    void shopStarsCount(){
        Shop shop = new Shop("Ramahi", "The best place to buy the best meal you will ever have in your life!", 3);

        Review r1 = new Review("Nice", "Anas", 3 );
        Review r2 = new Review("Great", "Majd", 5);
        Review r3 = new Review("Too bad", "Saify", 1);
        shop.addReview(r1);
        shop.addReview(r2);
        shop.addReview(r3);

        double expected = 3.0;
        assertEquals(expected, shop.getStars());
    }

    @Test
    void theaterToString(){
        ArrayList<String> movies = new ArrayList<String>();
        Theater th = new Theater("Taj Movies", movies);

        String expected = "This is a Theater instance, with name: Taj Movies, with these movies:\n";
        assertEquals(expected, th.toString());

        th.addMovie("Taken");
        th.addMovie("Inception");
        th.addMovie("Conjuring");

        expected = "This is a Theater instance, with name: Taj Movies, with these movies:\n" +
                "Taken\n" +
                "Inception\n" +
                "Conjuring\n";
        assertEquals(expected, th.toString());
    }

    @Test
    void theaterAddMovie(){
        ArrayList<String> movies = new ArrayList<String>();
        Theater th = new Theater("Taj Movies", movies);
        th.addMovie("Taken");
        th.addMovie("Inception");
        th.addMovie("Conjuring");

        String expected = "This is a Theater instance, with name: Taj Movies, with these movies:\n" +
                "Taken\n" +
                "Inception\n" +
                "Conjuring\n";
        assertEquals(expected, th.toString());

        // To check if duplicates are saved in the movies list:
        th.addMovie("Inception");
        th.addMovie("Conjuring");
        th.addMovie("Conjuring");
        assertEquals(expected, th.toString());
    }

    @Test
    void theaterRemoveMovie(){
        ArrayList<String> movies = new ArrayList<String>();
        movies.add("Taken");
        movies.add("Inception");
        movies.add("Conjuring");
        Theater th = new Theater("Taj Movies", movies);

        String expected = "This is a Theater instance, with name: Taj Movies, with these movies:\n" +
                "Taken\n" +
                "Conjuring\n";

        th.removeMovie("Inception");
        assertEquals(expected, th.toString());

        // To test if we pass a nonexistent movie, it would remove it or not:
        th.removeMovie("not a movie :P");
        assertEquals(expected, th.toString());
    }

    @Test
    void theaterAddReview(){
        ArrayList<String> movies = new ArrayList<String>();
        Theater th = new Theater("Taj Movies", movies);

        String expected = "[]";

        assertEquals(expected, th.reviewsList.toString());

        Review r1 = new Review("Nice", "Anas", 4 );
        Review r2 = new Review("Great", "Majd", 5 );
        Review r3 = new Review("Not so great", "Saify", 3 );
        th.addReview(r1);
        th.addReview(r2);
        th.addReview(r3);

        expected = "[Review instance, with body: Nice, author: Anas, stars: 4, Review instance, with body: Great, author: Majd, stars: 5, Review instance, with body: Not so great, author: Saify, stars: 3]";
        assertEquals(expected, th.reviewsList.toString());
    }

    @Test
    void theaterAddReviewWithMovie(){
        ArrayList<String> movies = new ArrayList<String>();
        Theater th = new Theater("Taj Movies", movies);

        Review r1 = new Review("Nice", "Anas", 4 );
        Review r2 = new Review("Great", "Majd", 5, "Your name");
        Review r3 = new Review("Not so great", "Saify", 3, "Dark night");
        th.addReview(r1);
        th.addReview(r2);
        th.addReview(r3);

        String expected = "[Review instance, with body: Nice, author: Anas, stars: 4, Review instance, with body: Great, author: Majd, stars: 5, and his favourite movie: Your name, Review instance, with body: Not so great, author: Saify, stars: 3, and his favourite movie: Dark night]";

        assertEquals(expected, th.reviewsList.toString());
    }

    @Test
    void theaterStarsCount(){
        ArrayList<String> movies = new ArrayList<String>();
        Theater th = new Theater("Taj Movies", movies);

        Review r1 = new Review("Nice", "Anas", 4 );
        Review r2 = new Review("Great", "Majd", 5, "Your name");
        Review r3 = new Review("Not so great", "Saify", 3, "Dark night");
        th.addReview(r1);
        th.addReview(r2);
        th.addReview(r3);

        double expected = 4.0;
        assertEquals(expected, th.getStars());
    }





}
